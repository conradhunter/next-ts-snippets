{
  "GET API Route": {
    "prefix": "getapi",
    "body": [
      "import { NextResponse } from 'next/server';",
      "",
      "export async function GET(request: Request) {}"
    ],
    "description": "Create a GET API route in NextJS 13"
  },
  "POST API Route": {
    "prefix": "postapi",
    "body": [
      "import { NextResponse } from 'next/server';",
      "",
      "export async function POST(request: Request) {}"
    ],
    "description": "Create a POST API route in NextJS 13"
  },
  "HEAD API Route": {
    "prefix": "headapi",
    "body": [
      "import { NextResponse } from 'next/server';",
      "",
      "export async function HEAD(request: Request) {}"
    ],
    "description": "Create a HEAD API route in NextJS 13"
  },
  "PUT API Route": {
    "prefix": "putapi",
    "body": [
      "import { NextResponse } from 'next/server';",
      "",
      "export async function PUT(request: Request) {}"
    ],
    "description": "Create a PUT API route in NextJS 13"
  },
  "DELETE API Route": {
    "prefix": "deleteapi",
    "body": [
      "import { NextResponse } from 'next/server';",
      "",
      "export async function DELETE(request: Request) {}"
    ],
    "description": "Create a DELETE API route in NextJS 13"
  },
  "PATCH API Route": {
    "prefix": "patchapi",
    "body": [
      "import { NextResponse } from 'next/server';",
      "",
      "export async function PATCH(request: Request) {}"
    ],
    "description": "Create a PATCH API route in NextJS 13"
  },
  "OPTIONS API Route": {
    "prefix": "optionsapi",
    "body": [
      "import { NextResponse } from 'next/server';",
      "",
      "export async function OPTIONS(request: Request) {}"
    ],
    "description": "Create a OPTIONS API route in NextJS 13"
  },
  // FILES
  "Next 13 loading file": {
    "prefix": "tsnxld",
    "body": [
      "import React from 'react';",
      "",
      "export default function Loading() {",
      "   return (",
      "       <div>",
      "           <h1>Loading...</h1>",
      "       </div>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 loading file"
  },
  "Next 13 error file": {
    "prefix": "tsnxer",
    "body": [
      "'use client'",
      "",
      "import React, { useEffect } from 'react';",
      "",
      "export default function Error({",
      "   error,",
      "   reset,",
      "}: {",
      "   error: Error & { digest?: string };",
      "   reset: () => void;",
      "}) {",
      "   useEffect(() => {",
      "       console.error(error);",
      "   }, [error]);",
      "   return (",
      "       <div>",
      "           <h1>Something went wrong!</h1>",
      "           <button",
      "               onClick={() => reset()}",
      "           >",
      "               Try again.",
      "           </button>",
      "       </div>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 error file"
  },
  "Next 13 page file": {
    "prefix": "tsnxpg",
    "body": [
      "import React from 'react';",
      "",
      "export default function ${TM_FILENAME_BASE}() {",
      "   return (",
      "       <div>",
      "           <h1>${TM_FILENAME_BASE}</h1>",
      "       </div>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 page file"
  },
  "Next 13 not-found file": {
    "prefix": "tsnxnf",
    "body": [
      "import React from 'react';",
      "import Link from 'next/link';",
      "",
      "export default function NotFound() {",
      "   return (",
      "       <div>",
      "           <h2>Not Found</h2>",
      "           <p>Could not find requested resource</p>",
      "           <p>",
      "             View <Link href='/blog'>all posts</Link>",
      "           </p>",
      "       </div>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 not-found file"
  },
  "Next 13 Rootlayout": {
    "prefix": "tsnxrl",
    "body": [
      "export default function RootLayout({",
      "   children,",
      "}: {",
      "   children: React.ReactNode;",
      "}) {",
      "   return (",
      "       <html lang='en'>",
      "           <body>{children}</body>",
      "       </html>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 Rootlayout file"
  },
  "Next 13 Layout": {
    "prefix": "tsnxl",
    "body": [
      "export default function Layout({",
      "   children,",
      "}: {",
      "   children: React.ReactNode;",
      "}) {",
      "   return <div>{children}</div>;",
      "}"
    ],
    "description": "Create a NextJS 13 Layout file"
  },
  "Next 13 Client Component": {
    "prefix": "tsnxcl",
    "body": [
      "'use client';",
      "",
      "import React, { FC, useState } from 'react';",
      "",
      "interface I${TM_FILENAME_BASE}Props {}",
      "",
      "export default function ${TM_FILENAME_BASE}() {",
      "   const [state, setState] = useState();",
      "   return (",
      "       <div>",
      "           <h1>${TM_FILENAME_BASE}</h1>",
      "       </div>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 Client Component file"
  },
  "Next 13 Server Component": {
    "prefix": "tsnxsv",
    "body": [
      "import React, { FC } from 'react';",
      "",
      "interface I${TM_FILENAME_BASE}Props {}",
      "",
      "export default ${TM_FILENAME_BASE}() {",
      "   return (",
      "       <div>",
      "           <h1>${TM_FILENAME_BASE}</h1>",
      "       </div>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 Server Component file"
  },
  "Next 13 Dynamic Route": {
    "prefix": "tsnxdr",
    "body": [
      "import React from 'react';",
      "",
      "interface I${TM_FILENAME_BASE}Props {",
      "   params: {",
      "      slug: string;",
      "   };",
      "}",
      "",
      "export async function generateStaticParams() {",
      "   const posts = await fetch('https://.../posts').then((res) => res.json());",
      "",
      "   return posts.map((post) => ({",
      "       slug: post.slug,",
      "   }));",
      "}",
      "",
      "export default function ${TM_FILENAME_BASE}({ params }) {",
      "   const { slug } = params;",
      "   return (",
      "       <div>",
      "           <h1>Post Slug: {slug}</h1>",
      "       </div>",
      "   );",
      "}"
    ],
    "description": "Create a NextJS 13 Dynamic Route file"
  },
  // Functions
  "Generate Static Params": {
    "prefix": "gsp",
    "body": [
      "export async function generateStaticParams() {",
      "// https://nextjs.org/docs/app/api-reference/functions/generate-static-params",
      "   const posts = await fetch('https://.../posts').then((res) => res.json());",
      "",
      "   return posts.map((post) => ({",
      "       slug: post.slug,",
      "   }));",
      "}"
    ],
    "description": "Create a NextJS 13 Generate Static Params function"
  },
  "Static Metadata": {
    "prefix": "stmd",
    "body": [
      "import { Metadata } from 'next';",
      "",
      "export const metadata: Metadata = {",
      "   title: 'My App',",
      "   description: 'My app description',",
      "}"
    ],
    "description": "Create a NextJS 13 Static Metadata function"
  },
  "Dynamic Metadata": {
    "prefix": "dymd",
    "body": [
      "import { Metadata } from 'next';",
      "",
      "export async function generateMetadata({ params }) {",
      "   return {",
      "       title: '...',",
      "       description: '...',",
      "   };",
      "}"
    ]
  }
}
